name: Sync Repository

on:
  schedule:
    # 每6小时运行一次
    - cron: '0 */6 * * *'
  # 允许手动触发
  workflow_dispatch:

# 添加权限配置
permissions:
  contents: write

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout target repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          path: target_repo

      - name: Configure Git
        run: |
          cd target_repo
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"

      - name: Download and extract source repository
        run: |
          # 创建临时目录
          mkdir -p temp_sync
          cd temp_sync
          
          # 下载源仓库的zip文件
          curl -L https://github.com/ls125781003/tvboxtg/archive/refs/heads/main.zip -o source.zip
          # 解压文件
          unzip -q source.zip
          # 删除zip文件
          rm source.zip
          
          # 返回工作目录
          cd ..
          
          # 进入目标仓库目录
          cd target_repo
          
          # 删除当前目录下的所有文件（除了 .git 和 .github）
          find . -mindepth 1 -maxdepth 1 -not -name '.git' -not -name '.github' -exec rm -rf {} +
          
          # 移动源仓库文件到当前目录
          mv ../temp_sync/tvboxtg-main/* .
          mv ../temp_sync/tvboxtg-main/.* . 2>/dev/null || true
          
          # 清理临时目录
          cd ..
          rm -rf temp_sync
          
          # 显示当前目录内容
          echo "Current directory contents:"
          cd target_repo
          ls -la

      - name: Commit and push changes
        run: |
          cd target_repo
          # 显示git状态
          echo "Git status before commit:"
          git status
          
          # 添加所有文件
          git add -A
          
          # 显示git状态
          echo "Git status after add:"
          git status
          
          # 检查是否有更改
          if [[ -n "$(git status --porcelain)" ]]; then
            echo "Changes detected, committing and pushing..."
            git commit -m "Sync: Update from source repository [skip ci]"
            git push origin main
            echo "Changes pushed successfully"
          else
            echo "No changes to sync"
          fi 